---
# Update main.py with Qdrant initialization
- name: Backup main.py before Qdrant integration
  ansible.builtin.copy:
    src: "{{ orchestrator_app_dir }}/main.py"
    dest: "{{ orchestrator_app_dir }}/main.py.bak-qdrant"
    remote_src: true
    owner: "{{ orchestrator_service_user }}"
    group: "{{ orchestrator_service_group }}"
    mode: "0644"
  become: true

- name: Add Qdrant imports to main.py
  ansible.builtin.lineinfile:
    path: "{{ orchestrator_app_dir }}/main.py"
    line: from services.qdrant_client import init_qdrant, close_qdrant
    insertafter: from services.redis_streams import init_redis, close_redis
    state: present
  become: true
  notify: restart orchestrator

- name: Add Qdrant initialization to startup
  ansible.builtin.lineinfile:
    path: "{{ orchestrator_app_dir }}/main.py"
    line: "    await init_qdrant()  # Initialize Qdrant vector database client"
    insertafter: await init_redis\(\)
    state: present
  become: true
  notify: restart orchestrator

- name: Add Qdrant close to shutdown
  ansible.builtin.lineinfile:
    path: "{{ orchestrator_app_dir }}/main.py"
    line: "    await close_qdrant()  # Close Qdrant client"
    insertafter: await close_redis\(\)
    state: present
  become: true
  notify: restart orchestrator

- name: Verify Qdrant integration in main.py
  ansible.builtin.command: >
    grep -E 'import.*qdrant|init_qdrant|close_qdrant' {{ orchestrator_app_dir }}/main.py
  register: qdrant_integration_check
  changed_when: false

- name: Display Qdrant integration status
  ansible.builtin.debug:
    msg: âœ… Qdrant integration added to main.py
