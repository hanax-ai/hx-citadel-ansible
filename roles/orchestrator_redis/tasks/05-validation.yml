---
# Redis Streams validation
- name: Test Redis connection from orchestrator
  ansible.builtin.command: >
    redis-cli -h {{ redis_host }} -p {{ redis_port }}
    --no-auth-warning ping
  environment:
    REDISCLI_AUTH: "{{ redis_password }}"
  register: redis_ping_test
  changed_when: false
  failed_when: "'PONG' not in redis_ping_test.stdout"
  tags: [validation]
- name: Verify ingestion queue stream exists
  ansible.builtin.command: >
    redis-cli -h {{ redis_host }} -p {{ redis_port }}
    --no-auth-warning XINFO STREAM {{ redis_stream_ingestion }}
  environment:
    REDISCLI_AUTH: "{{ redis_password }}"
  register: ingestion_stream_check
  changed_when: false
  tags: [validation]
- name: Verify events stream exists
  ansible.builtin.command: >
    redis-cli -h {{ redis_host }} -p {{ redis_port }}
    --no-auth-warning XINFO STREAM {{ redis_stream_events }}
  environment:
    REDISCLI_AUTH: "{{ redis_password }}"
  register: events_stream_check
  changed_when: false
  tags: [validation]
- name: Verify consumer groups on ingestion stream
  ansible.builtin.command: >
    redis-cli -h {{ redis_host }} -p {{ redis_port }}
    --no-auth-warning XINFO GROUPS {{ redis_stream_ingestion }}
  environment:
    REDISCLI_AUTH: "{{ redis_password }}"
  register: ingestion_groups
  changed_when: false
  failed_when: "'{{ redis_consumer_group_workers }}' not in ingestion_groups.stdout"
  tags: [validation]
- name: Verify consumer groups on events stream
  ansible.builtin.command: >
    redis-cli -h {{ redis_host }} -p {{ redis_port }}
    --no-auth-warning XINFO GROUPS {{ redis_stream_events }}
  environment:
    REDISCLI_AUTH: "{{ redis_password }}"
  register: events_groups
  changed_when: false
  tags: [validation]
- name: Wait for orchestrator service to be ready
  ansible.builtin.wait_for:
    host: "0.0.0.0"
    port: 8000
    delay: 2
    timeout: 30
  tags: [validation]
- name: Test events/stats endpoint
  ansible.builtin.uri:
    url: http://localhost:8000/events/stats
    method: GET
    timeout: 10
    status_code: 200
  register: stats_endpoint_test
  ignore_errors: true
  tags: [validation]
- name: Display Redis validation summary
  ansible.builtin.debug:
    msg:
      - ============================================================
      - Redis Streams Validation
      - ============================================================
      - "✅ Redis connection: {{ redis_ping_test.stdout }}"
      - "✅ Ingestion stream: Created with {{ ingestion_groups.stdout_lines | length }} consumer groups"
      - "✅ Events stream: Created with {{ events_groups.stdout_lines | length }} consumer groups"
      - "✅ Stats endpoint: {{ 'Available' if stats_endpoint_test.status == 200 else 'Not yet available' }}"
      - ✅ Redis Streams integration complete!
      - ============================================================
  tags: [validation]
