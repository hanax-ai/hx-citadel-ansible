# Managed by Ansible
# Qdrant Web UI configuration - HTTP only (dev/test)

upstream qdrant_backend {
    server {{ qdrant_ui_backend_host }}:{{ qdrant_ui_backend_port }};
    keepalive 32;
}

server {
    listen {{ qdrant_ui_http_port }};
    listen [::]:{{ qdrant_ui_http_port }};
    server_name {{ inventory_hostname }} {{ ansible_host | default(ansible_all_ipv4_addresses[0]) }};

    access_log {{ qdrant_ui_root }}/logs/access.log;
    error_log {{ qdrant_ui_root }}/logs/error.log warn;

    root {{ qdrant_ui_root }}/builds/current;
    index index.html;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    server_tokens off;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Proxy all /api/ requests to Qdrant backend
    location /api/ {
        proxy_pass {{ qdrant_ui_backend_protocol }}://qdrant_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
{% if qdrant_ui_backend_api_key != "" %}
        proxy_set_header api-key "{{ qdrant_ui_backend_api_key }}";
{% endif %}
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
{% if qdrant_ui_backend_protocol == 'https' %}
        proxy_ssl_verify {{ qdrant_ui_backend_ssl_verify }};
        proxy_ssl_server_name on;
{% endif %}
    }

    # Direct Qdrant API endpoints for the web UI
    location ~ ^/(collections|aliases|cluster|telemetry|metrics|locks)($|/) {
        proxy_pass {{ qdrant_ui_backend_protocol }}://qdrant_backend$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
{% if qdrant_ui_backend_api_key != "" %}
        proxy_set_header api-key "{{ qdrant_ui_backend_api_key }}";
{% endif %}
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
{% if qdrant_ui_backend_protocol == 'https' %}
        proxy_ssl_verify {{ qdrant_ui_backend_ssl_verify }};
        proxy_ssl_server_name on;
{% endif %}
    }

    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
