#!/bin/bash
# HX-Citadel Shield Quick Activation Script
# Managed by Ansible - Generated: {{ ansible_date_time.iso8601 }}

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🛡️  HX-Citadel Shield Environment Activation${NC}"
echo "================================================"

# Navigate to application directory
cd {{ app_dir }}
echo -e "${GREEN}✓${NC} Changed to application directory: $(pwd)"

# Activate virtual environment
if [ -f "{{ app_dir }}/venv/bin/activate" ]; then
    source {{ app_dir }}/venv/bin/activate
    echo -e "${GREEN}✓${NC} Virtual environment activated"
else
    echo -e "${RED}✗${NC} Virtual environment not found at {{ app_dir }}/venv"
    exit 1
fi

# Display environment info
echo ""
echo "Environment Information:"
echo "  Python: $(python --version)"
echo "  Poetry: $(poetry --version 2>/dev/null || echo 'Not installed')"
echo "  App Directory: {{ app_dir }}"
echo "  Log Directory: {{ log_dir }}"
echo ""

# Check service status
echo "Service Status:"
if systemctl is-active --quiet orchestrator 2>/dev/null; then
    echo -e "  Orchestrator: ${GREEN}Active${NC}"
else
    echo -e "  Orchestrator: ${YELLOW}Inactive${NC}"
fi

if systemctl is-active --quiet litellm 2>/dev/null; then
    echo -e "  LiteLLM: ${GREEN}Active${NC}"
else
    echo -e "  LiteLLM: ${YELLOW}Inactive${NC}"
fi

echo ""
echo -e "${BLUE}Available commands:${NC}"
echo "  shield-logs       - Tail orchestrator logs"
echo "  shield-status     - Check service status"
echo "  shield-restart    - Restart services"
echo "  shield-health     - Run health check"
echo "  manage-services.sh - Service management menu"
echo ""
echo -e "${GREEN}Ready to work!${NC}"

# Start a new shell with the environment loaded
exec $SHELL
