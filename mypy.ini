[mypy]
# Mypy Configuration for HX-Citadel Shield
# Phase 2 - Type Hints Migration (TASK-022)
# Target: 95%+ type hint coverage

# Python version
python_version = 3.12

# Strict mode configuration (progressive - will enable all gradually)
warn_return_any = True
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
strict_concatenate = True

# Gradual typing - start lenient, make stricter as we add type hints
disallow_untyped_defs = False  # Set to True after TASK-024 through TASK-028
disallow_any_unimported = False
disallow_any_expr = False
disallow_any_decorated = False
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True

# Error reporting
show_error_context = True
show_column_numbers = True
show_error_codes = True
pretty = True
color_output = True
error_summary = True

# Incremental mode for faster checking
incremental = True
cache_dir = .mypy_cache/

# Import discovery
namespace_packages = True
explicit_package_bases = True
ignore_missing_imports = False

# Exclude patterns (tech_kb is reference material, not production code)
exclude = (?x)(
    ^tech_kb/.*$
    | ^\.git/.*$
    | ^\.venv/.*$
    | ^venv/.*$
    | ^build/.*$
    | ^dist/.*$
    | .*\.egg-info/.*$
  )

# Follow imports for type checking
follow_imports = normal
follow_imports_for_stubs = True

# Platform configuration
platform = linux

# ==========================================
# Module-specific overrides
# ==========================================

# FastMCP - No official type stubs yet, use dynamic typing
[mypy-fastmcp.*]
ignore_missing_imports = True

# Crawl4AI - No official type stubs
[mypy-crawl4ai.*]
ignore_missing_imports = True

# Docling - No official type stubs
[mypy-docling.*]
ignore_missing_imports = True

# PyBreaker - Circuit breaker library, no stubs
[mypy-pybreaker.*]
ignore_missing_imports = True

# LightRAG - Custom AI library, no stubs
[mypy-lightrag.*]
ignore_missing_imports = True

# Qdrant Client - Has partial typing
[mypy-qdrant_client.*]
ignore_missing_imports = False
warn_return_any = False

# Pydantic - Has excellent typing support
[mypy-pydantic.*]
ignore_missing_imports = False
strict = True

# FastAPI - Has excellent typing support
[mypy-fastapi.*]
ignore_missing_imports = False
strict = True

# SQLAlchemy - Has type stubs
[mypy-sqlalchemy.*]
ignore_missing_imports = False
warn_return_any = False
plugins = sqlalchemy.ext.mypy.plugin

# Redis - Has type stubs available
[mypy-redis.*]
ignore_missing_imports = False

# HTTPX - Has excellent typing
[mypy-httpx.*]
ignore_missing_imports = False
strict = True

# Prometheus Client - Basic typing
[mypy-prometheus_client.*]
ignore_missing_imports = True

# LangGraph - AI framework
[mypy-langgraph.*]
ignore_missing_imports = True

# Pydantic AI - New library, may have limited stubs
[mypy-pydantic_ai.*]
ignore_missing_imports = True

# Pytest - Has type stubs
[mypy-pytest.*]
ignore_missing_imports = False

# Pytest-asyncio
[mypy-pytest_asyncio.*]
ignore_missing_imports = True

# Uvicorn - ASGI server
[mypy-uvicorn.*]
ignore_missing_imports = True

# Asyncpg - PostgreSQL driver
[mypy-asyncpg.*]
ignore_missing_imports = True

# Alembic - Database migrations
[mypy-alembic.*]
ignore_missing_imports = True

# Python-dotenv
[mypy-dotenv.*]
ignore_missing_imports = True

# ==========================================
# Project-specific modules (to be created)
# ==========================================

# Common types module (TASK-023)
[mypy-common_types.*]
strict = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True

# Future orchestrator modules (TASK-025, TASK-026)
[mypy-orchestrator.*]
# Will enable strict mode after type hints are added
disallow_untyped_defs = False
warn_return_any = True

# Future agent modules (TASK-027)
[mypy-agents.*]
# Will enable strict mode after type hints are added
disallow_untyped_defs = False
warn_return_any = True

# Future API modules (TASK-028)
[mypy-api.*]
# Will enable strict mode after type hints are added
disallow_untyped_defs = False
warn_return_any = True

# ==========================================
# Testing configuration
# ==========================================

[mypy-tests.*]
disallow_untyped_defs = False
warn_return_any = False

# ==========================================
# Type stub packages (install these for better type checking)
# ==========================================
# Required type stub packages (to be added to requirements-dev.txt):
# - types-redis
# - types-requests
# - sqlalchemy[mypy]
# - types-python-dateutil
#
# Install with: pip install -r requirements-dev.txt
# ==========================================
