name: Test Suite

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'
      - 'tests/**'
      - 'pytest.ini'
      - 'requirements-dev.txt'
      - '.github/workflows/test.yml'
  workflow_dispatch:  # Manual trigger
  # push: Disabled to prevent notification spam - re-enable when tests are stable

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
        cache-dependency-path: 'requirements-dev.txt'
    
    - name: Check Python Syntax (Fast Fail)
      run: |
        echo "🔍 Checking Python syntax in tests/"
        python -m compileall tests/ -q || {
          echo "❌ Syntax errors found!"
          exit 1
        }
        echo "✅ All Python files have valid syntax"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run Ruff linter (catches issues early)
      run: |
        ruff check tests/ --output-format=github
      continue-on-error: true
    
    - name: Check for mutable defaults
      run: |
        echo "Checking for mutable defaults in Pydantic models..."
        if grep -rn ":\s*\(List\|Dict\)\[.*\]\s*=\s*\(\[\]\|{}\)" tests/common_types.py 2>/dev/null; then
          echo "::error::Found mutable defaults! Use Field(default_factory=...) instead"
          exit 1
        fi
    
    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ -v \
          --cov=tests/common_types.py \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          -n auto \
          --durations=10 \
          --tb=short
    
    - name: Run integration tests
      if: false  # Disabled: Requires services (hx-mcp1-server, hx-orchestrator-server) not available in CI
                 # TODO: Enable when Issue #17 (Docker test environment) is complete
      run: |
        pytest tests/integration/ -m integration
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-python-3.12
        path: |
          coverage.xml
          htmlcov/
          reports/
        retention-days: 30
    
    - name: Create Issue on Test Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚨 CI Failure: Test Suite - Run #${context.runNumber}`,
            labels: ['bug', 'ci-failure', 'automated'],
            body: `## CI Test Failure Detected

**Workflow**: Test Suite
**Run**: [#${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
**Branch**: \`${context.ref}\`
**Commit**: ${context.sha.substring(0, 7)}
**Triggered by**: @${context.actor}

### What Happened

The test suite failed during CI execution. This could be due to:
- Syntax errors in Python files
- Failing unit tests
- Import errors
- Dependency issues

### Action Required

1. Review the workflow run linked above
2. Check the logs for specific errors
3. Fix the issue locally
4. Re-run tests: \`pytest tests/unit/ -v\`
5. Push fix to trigger CI again

### Automation

This issue was automatically created by the CI workflow to ensure failures are tracked and addressed.

---
**Auto-created by**: \`.github/workflows/test.yml\`
**Related**: Issue #45 (CI automation improvements)`
          });
          console.log(\`Created issue #\${issue.data.number}\`)
