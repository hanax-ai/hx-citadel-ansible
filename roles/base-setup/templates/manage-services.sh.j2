#!/bin/bash
# HX-Citadel Shield Service Management Script
# Managed by Ansible - Generated: {{ ansible_date_time.iso8601 }}

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Service list
SERVICES=("orchestrator" "litellm")

show_menu() {
    clear
    echo -e "${BLUE}═══════════════════════════════════════════════${NC}"
    echo -e "${BLUE}  HX-Citadel Shield - Service Management${NC}"
    echo -e "${BLUE}═══════════════════════════════════════════════${NC}"
    echo ""
    echo "1) Start all services"
    echo "2) Stop all services"
    echo "3) Restart all services"
    echo "4) Status of all services"
    echo "5) View orchestrator logs"
    echo "6) View LiteLLM logs"
    echo "7) Run health check"
    echo "8) Enable services on boot"
    echo "9) Disable services on boot"
    echo "q) Quit"
    echo ""
    echo -n "Enter your choice: "
}

get_service_status() {
    local service=$1
    if systemctl is-active --quiet "$service" 2>/dev/null; then
        echo -e "${GREEN}Active${NC}"
    else
        echo -e "${RED}Inactive${NC}"
    fi
}

start_all() {
    echo -e "${BLUE}Starting all services...${NC}"
    for service in "${SERVICES[@]}"; do
        echo -n "  Starting $service... "
        if sudo systemctl start "$service" 2>/dev/null; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${RED}✗${NC} (may not be configured yet)"
        fi
    done
}

stop_all() {
    echo -e "${BLUE}Stopping all services...${NC}"
    for service in "${SERVICES[@]}"; do
        echo -n "  Stopping $service... "
        if sudo systemctl stop "$service" 2>/dev/null; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${YELLOW}Already stopped${NC}"
        fi
    done
}

restart_all() {
    echo -e "${BLUE}Restarting all services...${NC}"
    for service in "${SERVICES[@]}"; do
        echo -n "  Restarting $service... "
        if sudo systemctl restart "$service" 2>/dev/null; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${RED}✗${NC} (may not be configured yet)"
        fi
    done
}

status_all() {
    echo -e "${BLUE}Service Status:${NC}"
    echo ""
    for service in "${SERVICES[@]}"; do
        status=$(get_service_status "$service")
        enabled=$(systemctl is-enabled "$service" 2>/dev/null || echo "disabled")
        echo -e "  $service: $status (Boot: $enabled)"
    done
}

enable_all() {
    echo -e "${BLUE}Enabling services on boot...${NC}"
    for service in "${SERVICES[@]}"; do
        echo -n "  Enabling $service... "
        if sudo systemctl enable "$service" 2>/dev/null; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${RED}✗${NC} (may not be configured yet)"
        fi
    done
}

disable_all() {
    echo -e "${BLUE}Disabling services on boot...${NC}"
    for service in "${SERVICES[@]}"; do
        echo -n "  Disabling $service... "
        if sudo systemctl disable "$service" 2>/dev/null; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${YELLOW}Already disabled${NC}"
        fi
    done
}

# Main loop
while true; do
    show_menu
    read -r choice
    echo ""
    
    case $choice in
        1) start_all ;;
        2) stop_all ;;
        3) restart_all ;;
        4) status_all ;;
        5) echo -e "${BLUE}Orchestrator logs (Ctrl+C to exit):${NC}"; sudo journalctl -u orchestrator -f ;;
        6) echo -e "${BLUE}LiteLLM logs (Ctrl+C to exit):${NC}"; sudo journalctl -u litellm -f ;;
        7) 
            if [ -f "{{ app_dir }}/scripts/health-check.sh" ]; then
                {{ app_dir }}/scripts/health-check.sh
            else
                echo -e "${YELLOW}Health check script not found${NC}"
            fi
            ;;
        8) enable_all ;;
        9) disable_all ;;
        q|Q) echo -e "${GREEN}Goodbye!${NC}"; exit 0 ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
    
    echo ""
    echo -n "Press Enter to continue..."
    read -r
done
