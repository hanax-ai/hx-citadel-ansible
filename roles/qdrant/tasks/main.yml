---
- name: Ensure repository prerequisites are installed
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: true
  become: true
  tags:
    - vector

- name: Install Qdrant apt signing key
  ansible.builtin.apt_key:
    url: "{{ qdrant_apt_key_url }}"
    keyring: "{{ qdrant_apt_keyring }}"
    state: present
  become: true
  tags:
    - vector
  when: not ansible_check_mode

- name: Add Qdrant apt repository
  ansible.builtin.apt_repository:
    repo: "{{ qdrant_apt_repository }}"
    filename: qdrant
    state: present
  become: true
  tags:
    - vector
  when: not ansible_check_mode

- name: Install Qdrant package
  ansible.builtin.apt:
    name: "{{ 'qdrant=' + qdrant_version if qdrant_version != 'latest' else 'qdrant' }}"
    state: present
    update_cache: true
  become: true
  tags:
    - vector
  when: not ansible_check_mode

- name: Ensure Qdrant data directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ qdrant_user }}"
    group: "{{ qdrant_group }}"
    mode: "0755"
  loop:
    - "{{ qdrant_storage_path }}"
    - "{{ qdrant_snapshots_path }}"
  become: true
  tags:
    - vector

- name: Ensure Qdrant configuration directory exists
  ansible.builtin.file:
    path: "{{ qdrant_config_path | dirname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true
  tags:
    - vector

- name: Deploy Qdrant configuration
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ qdrant_config_path }}"
    owner: "{{ qdrant_user }}"
    group: "{{ qdrant_group }}"
    mode: "0644"
  notify: restart qdrant
  become: true
  tags:
    - vector

- name: Ensure Qdrant service is enabled and running
  ansible.builtin.service:
    name: "{{ qdrant_service_name }}"
    enabled: true
    state: started
  become: true
  tags:
    - vector
  when: not ansible_check_mode
